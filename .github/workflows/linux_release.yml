# TODO : https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/
#
name: Linux Release

on:
  push:
    branches:
      - 'main'
#  schedule:
#  - cron: "30 */6 * * *"

defaults:
  run:
    shell: bash

env:
  SOURCE_DIR:   ${{ github.workspace }}
  ARTIFACT:     camcalib_artifacts.zip
#  INSTALL_DIRECTORY: ${{ github.workspace }}/install

jobs:
  build:
    runs-on:  ubuntu-22.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Get all tags for correct version determination
        working-directory:  ${{ env.SOURCE_DIR }}
        run: |
          git fetch --all --tags -f    
          
      - name: Create build directory
        run:  mkdir ${{ env.SOURCE_DIR }}/data

      - name: setup-python
        uses: actions/setup-python@v4
        with:
          cache: 'pip' # caching pip dependencies
      - run: pip install h5py scikit-learn scipy ngsolve numpy torch torchvision pillow opencv-python pandas torch-lr-finder torch_geometric

#      - name: Determine Previous Run Number
#        id: get_prev_run
#        run: echo "::set-output name=prev_run::$((${{ github.run_number }} - 1))"

      - name: Cache Build
        uses: actions/cache@v3
        with: 
          path: ${{ env.SOURCE_DIR }}/data/
          key: train_data_model_2
          restore-keys: train_data_model

      - name: run python script
        working-directory: ${{ env.SOURCE_DIR }}
        run:  |
              #python hlp/hdf5.py
              python poission_train_data_generate.py
              ls ${{ env.SOURCE_DIR }}/data/
              #python train_gkn.py

      - name: Zip build
        working-directory: ${{ env.SOURCE_DIR }}
        run:  |
              7z a ${{ env.ARTIFACT }}  ${{ env.SOURCE_DIR }}/data/train_data.h5 
# ${{ env.SOURCE_DIR }}/data/train_mesh.vol ${{ env.SOURCE_DIR }}/data/checkpoint.pt


      - name: Save build artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ env.SOURCE_DIR }}/${{ env.ARTIFACT }}
